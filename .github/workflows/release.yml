name: learn-github-actions
on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      release_archive:
        required: true
        type: string
    secrets:
      vault_token:
        required: true

jobs:
  release:
    runs-on: [self-hosted]
    steps:
      - name: Get Vault Secrets
        id: vault-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault-internal.pdevops78.online:8200
          token: ${{ secrets.vault_token }}
          tlsSkipVerify: true
          secrets: |
            common/data/github_actions artifactory_user | artifactory_user ;
            common/data/github_actions artifactory_password | artifactory_password ;
      - name: code checkout
        uses: actions/checkout@v4
      - run: echo OK
        name: Lint Code
      - run: echo OK
        name: unit test
      - run: echo OK
        name: integration test
      - run: echo /opt/sonar-scanner-7.1.0.4889-linux-x64/bin/sonar-scanner -Dsonar.host.url=http://sonarqube-internal.pdevops78.online:9000 -Dsonar.projectKey=${{inputs.project_name }}  -Dsonar.login=${{ steps.vault-secrets.outputs.sonarqube_user }} -Dsonar.password=${{steps.vault-secrets.outputs.sonarqube_password }}
        name: code Review
      - run: env
        name: run env

      - run : echo ${{github.ref.name}} >VERSION
        name: create version
      - name: zip files
        run: zip -r result.zip ${{ inputs.release_archive }}

      - run: curl -f -v --user ${{ steps.vault-secrets.outputs.artifactory_user }}:${{ steps.vault-secrets.outputs.artifactory_password }} --data-binary @result.zip -X PUT "http://artifactory-internal.pdevops78.online:8081/artifactory/${{ inputs.project_name }}/${GITHUB_REF_NAME}.zip"
        name: Release Software

      - run: |
          echo '{
          "environment_variables": [
            {
              "name": "APP_VERSION",
              "secure": false,
              "value": "app_version"
            }
          ],
          "update_materials_before_scheduling": true
          }' | sed -e "s/app_version/${GITHUB_REF_NAME}/" | jq >data.json
          curl 'http://52.201.245.87:8153/go/api/pipelines/${{ inputs.project_name }}/schedule' -H 'Accept: application/vnd.go.cd.v1+json' -H 'Content-Type: application/json' -X POST -d "@data.json"






